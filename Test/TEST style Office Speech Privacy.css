/* Basic Styling */
body {
    margin: 0;
    font-family: Arial, sans-serif;
}

* {
    box-sizing: border-box; /* Ensure padding is included in width/height calculations */
}
/* End of Basic Styling */

/* Header and Navigation Bar Styling */
header {
    background-color: white;
    color: black;
    padding: 10px 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

nav ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    display: flex; 
}

nav ul li {
    margin: 0 15px;
}

nav ul li a {
    color: black;
    text-decoration: none;
}

nav ul li a:hover {
    text-decoration: underline;
}

/* New styles for mobile menu */
.menu-toggle {
    display: none;
    flex-direction: column;
    cursor: pointer;
}

.menu-toggle .bar {
    height: 3px;
    width: 25px;
    background-color: black;
    margin: 3px 0;
}

.close-menu {
    background: none; /* No background */
    border: none; /* No border */
    color: black; /* Text color */
    font-size: 24px; /* Font size */
    cursor: pointer; /* Pointer cursor */
    margin: 10px; /* Margin for spacing */
    align-self: flex-start; /* Align to the start of the menu */
    display: none; /* Hide by default */
}

/* Media query for mobile responsiveness */
@media (max-width: 1280px) {
    nav ul {
        display: flex; /* Use flexbox for layout */
        flex-direction: column; /* Stack items vertically */
        width: 250px; /* Set the width of the menu */
        position: fixed; /* Position it fixed */
        top: 0; /* Align to the top */
        right: -250px; /* Start off-screen */
        background-color: white; /* Background color */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Optional shadow */
        text-align: left; /* Align text to the left */
        transition: right 0.3s ease; /* Animation for sliding */
        z-index: 1002; /* Ensure it appears above other content */
    }

    nav ul.active {
        right: 0; /* Slide in */
    }

    .menu-toggle {
        display: flex; /* Show the hamburger icon */
    }

    /* Align the close button to the right */
    nav ul li:first-child {
        display: flex; /* Use flexbox for the close button */
        justify-content: flex-end; /* Align the close button to the right */
        width: 100%; /* Full width for the close button */
    }

    .close-menu {
        display: block; /* Show the close button in mobile view */
    }

    nav ul li {
        padding-top: 10px;
        padding-bottom: 5px;
    }
}

.main {
    display: flex;
    justify-content: space-around;
    margin: 20px;
    margin-left: 0px;
    width: 100%;
}


/* Play-Pause Button Styling */
.toggle-container {
    display: flex;
    justify-content: center;
    align-items: center;
}

#toggleImage {
    width: 50px; /* Adjust the size as needed */
    height: auto;
    cursor: pointer; /* Change cursor to pointer to indicate it's clickable */
    transition: transform 0.4s ease; /* Add transition for scaling */
}

#toggleImage:active {
    transform: scale(1.15); /* Scale up when clicked */
}

/* Multiple-Choice Switch Styling */
.multiple-choice {
    margin: 0px;
}

.choice-button {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 15px;
    border: 1px solid rgba(255, 255, 255, 0);
    margin: 0px 0;
    cursor: pointer;
    background-color: rgba(255, 255, 255, 0);
    transition: background-color 0.3s;
}

.choice-button:hover {
    background-color: rgba(250, 250, 250, 0.848);
}

input[type="radio"] {
    display: none; /* Hide the default radio button */
}

.custom-radio {
    width: 20px; /* Size of the custom radio button */
    height: 20px; /* Size of the custom radio button */
    border: 2px solid #ccc; /* Border color */
    border-radius: 50%; /* Make it circular */
    position: relative; /* Positioning for the inner circle */
    margin-right: 10px; /* Space between radio button and label */
    flex-shrink: 0; /* Prevent the radio button from shrinking */
    cursor: pointer; /* Change cursor to pointer */
}

.choice-text {
    flex-grow: 1; /* Allow the text to take up remaining space */
    white-space: normal; /* Allow text to wrap */
    overflow-wrap: break-word; /* Break long words if necessary */
}

input[type="radio"]:checked + .custom-radio {
    border-color: rgb(94, 192, 238); 
}

input[type="radio"]:checked + .custom-radio::after {
    content: ''; /* Create a pseudo-element */
    width: 12px; /* Size of the inner circle */
    height: 12px; /* Size of the inner circle */
    background-color: rgb(94, 192, 238);
    border-radius: 50%; /* Make it circular */
    position: absolute; /* Positioning */
    top: 50%; /* Center vertically */
    left: 50%; /* Center horizontally */
    transform: translate(-50%, -50%); /* Center the inner circle */
}

.listening-path-container {
    display: flex; /* Use flexbox for the title and image */
    flex-direction: column; /* Stack title and image vertically */
    align-items: center; /* Center items horizontally */
    margin-left: 20%;
}

/* Aliging the title */
.background_title {
    margin: 0; /* Remove default margin */
    text-align: center; /* Center the text */
    /* Optional: Add some padding or margin to the title */
    padding: 10px 0; /* Add vertical padding for spacing */
}
.flex-container {
    display: flex;
    align-items: flex-start; /* Align items at the start */
}

/* Toggle Switch Styling */
.container {
    position: relative; /* Change to relative positioning */
    align-self: flex-start; /* Align to the top of the flex container */
    left: 0; /* Align to the left */
    width: 200px; /* Set a fixed width for the container */
    height: 70vh; /* Full height minus the header height */
    overflow-y: auto; /* Enable vertical scrolling */
    background-color: #f0f0f0; /* Optional background color */
    border-right: 1px solid #ccc; /* Optional border for separation */
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2); /* Shadow effect */
    padding: 0px; /* Padding inside the container */
    display: flex;
    flex-direction: column; /* Stack elements vertically */
    align-items: center; /* Center elements horizontally */
    text-align: center; /* Center text */
    flex: none;
}


.switch_title {
    margin-bottom: 5px; /* Space between title and switches */
    margin-top: 10px;
    font-size: 16px; /* Adjust font size as needed */
}

.single-select-switch {
    display: flex;
    justify-content: center; /* Center the switches horizontally */
    margin-bottom: 5px;
}

.switch {
    position: relative;
    display: inline-block;
    width: 150px;
    height: 34px; /* Height of the slider */
}

.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
    border-radius: 34px;
}

.slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
}

input:checked + .slider {
    background-color: rgb(94, 192, 238);
}

input:checked + .slider:before {
    transform: translateX(116px);
}

/* Change label text based on toggle state */
.switch input:checked + .slider + .label {
    content: "On"; /* Change label to "On" when checked */
}

/* Style for the label */
.label {
    position: absolute;
    top: 50%; /* Center the label vertically */
    left: 50%; /* Center the label horizontally */
    transform: translate(-50%, -50%); /* Adjust for the label's own size */
    color: black; /* Change text color */
    z-index: 1; /* Ensure the label is above the slider */
}

/* Style for the inactive options */
.switch input:not(:checked) + .slider {
    background-color: #ccc;
}

/* Listening Path Image */
.listening_path {
    width: 90%; /* Make the image responsive */
    height: auto; /* Maintain aspect ratio */
}

/* Mini Map Styling */
.mini-map {
    position: fixed; /* Change to fixed to stick to the viewport */
    top: 20%; /* Distance from the top */
    right: 3%; /* Distance from the right */
    background-color: rgba(255, 255, 255, 0.8); /* Semi-transparent background */
    border: 1px solid #ccc; /* Border around the mini-map */
    border-radius: 8px; /* Rounded corners */
    padding: 10px; /* Padding inside the mini-map */
    padding-top: 30px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2); /* Shadow effect */
    z-index: 1000; /* Ensure it stays on top */
}

.mini-map-title {
    margin: 0; /* Remove default margin */
    font-size: 16px; /* Font size for the title */
    padding-bottom: 5px; /* Space between title and mini-map */
    z-index: 1001; /* Ensure it stays on top of the mini-map */
    text-align: center;
}

.grid {
    display: grid;
    grid-template-columns: 124px 159px; /* Two columns: Room A and Room C */
    grid-template-rows: 227px 185px; /* First row height, second row fixed height for Room B */
    gap: 0; /* No gap between grid items */
}

.receive-room-1 {
    grid-column: 2; 
    grid-row: 2; 
}

.receive-room-2 {
    grid-column: 1 / span 2; /* Receive Room 1 spans both columns */
    grid-row: 1; 
}

.source-room {
    grid-column: 1;
    grid-row: 2;
}

/* Different sizes for each image */
.img-receive-room-1 {
    width: 159px;
    height: 185px;
    cursor: pointer; /* Pointer cursor on hover */
    transition: transform 0.2s
}
.img-receive-room-1:hover {
    transform: scale(1.05); /* Scale up the image on hover */
}
.img-receive-room-2 {
    width: 283px;
    height: 227px;
    cursor: pointer; /* Pointer cursor on hover */
    transition: transform 0.2s
}
.img-receive-room-2:hover {
    transform: scale(1.05); /* Scale up the image on hover */
}
.img-source-room {
    width: 124px;
    height: 185px;
    cursor: pointer; /* Pointer cursor on hover */
    transition: transform 0.2s
}
.img-source-room:hover {
    transform: scale(1.05); /* Scale up the image on hover */
}

/* Mini Map Toggle Button */
.map-toggle {
    display: none;
    flex-direction: column;
    cursor: pointer;
}

.map-toggle .floorplan_icon {
    height: 50px;
    width: 50px;
}

.close-map {
    background: none; /* No background */
    border: none; /* No border */
    color: grey; /* Text color */
    font-size: 24px; /* Font size */
    cursor: pointer; /* Pointer cursor */
    align-self: flex-start; /* Align to the start of the mini map */
    display: none; /* Hide by default */
}

/* Hide the h3 element by default */
h3 {
    display: none; /* Hide by default */
}

/* Show the h3 element when the mini-map is active */
.mini-map.active h3 {
    display: block; /* Show the h3 element when the mini-map is active */
}

@media (max-width: 1200px) {
    .map-toggle {
        display: flex; /* Show the minimap icon */
    }

    /* Hide all room elements and grid by default */
    .receive-room-1,
    .receive-room-2,
    .source-room,
    .grid,
    .mini-map-title {
        display: none;
    }

    .mini-map {
        background-color: rgba(255, 255, 255, 1); /* Make Opaque */
        padding: 10px; /* Padding inside the mini-map */
        top: 40%;
    }

    /* When the map toggle is active, hide the toggle button */
    .map-toggle.active {
        display: none; /* Hide the hamburger icon */
    }

    /* Show room elements when they have the active class */
    .receive-room-1.active,
    .receive-room-2.active,
    .source-room.active {
        display: block; /* Change to block or flex as needed */
    }

    /* Specific grid layout for active rooms */
    .receive-room-1.active {
        grid-column: 2; 
        grid-row: 2;
    }
    .receive-room-2.active {
        grid-column: 1 / span 2; /* Receive Room 2 spans both columns */
        grid-row: 1; 
    }
    .source-room.active {
        grid-column: 1;
        grid-row: 2;
    }

    /* Show close button when active */
    .close-map.active {
        display: block; /* Show the close button */
    }

    /* Show grid when active */
    .grid.active {
        display: grid;
        grid-template-columns: 124px 159px; /* Two columns: Room A and Room C */
        grid-template-rows: 227px 185px; /* First row height, second row fixed height for Room B */
    }

    .mini-map-title.active {
        gap: 0; /* No gap between grid items */
        right: 10%; /* Distance from the right */
        margin: 0; /* Remove default margin */
        font-size: 16px; /* Font size for the title */
        padding-bottom: 5px; /* Space between title and mini-map */
        z-index: 1001; /* Ensure it stays on top of the mini-map */
        text-align: center;
        display: block; /* Ensure grid is displayed when active */
        overflow-y: auto; /* Enable vertical scrolling */
    }
}