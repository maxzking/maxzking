/* Basic Styling */
body {
    margin: 0;
    font-family: Arial, sans-serif;
}
header {
    background-color: white;
    color: black;
    padding: 10px 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Drop Shadow */
}
#Underheader {
    background-image: url(Photos/Unselected\ Receive\ Room\ 1.png);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    min-height: 70vh;
    transition: background-image 0.5s ease; /* Smooth transition for backround change */
}
nav ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    display: flex;
}
nav ul li {
    margin: 0 15px;
}
nav ul li a {
    color: black;
    text-decoration: none;
}
nav ul li a:hover {
    text-decoration: underline;
}
.main {
    display: flex;
    justify-content: space-around;
    margin: 20px;
    margin-left: 0px;
    width: 100%;
}

/* Play-Pause Button Styling */
.toggle-container {
    display: flex;
    justify-content: center;
    align-items: center;
}

#toggleImage {
    width: 50px; /* Adjust the size as needed */
    height: auto;
    cursor: pointer; /* Change cursor to pointer to indicate it's clickable */
    transition: transform 0.4s ease; /* Add transition for scaling */
}

#toggleImage:active {
    transform: scale(1.15); /* Scale up when clicked */
}

/* Multiple-Choice Switch Styling */
.multiple-choice {
    margin: 0px;
}

.choice-button {
    display: flex;
    align-items: center;
    padding: 10px;
    border: 1px solid rgba(255, 255, 255, 0);
    margin: 0px 0;
    cursor: pointer;
    background-color: rgba(255, 255, 255, 0);
    transition: background-color 0.3s;
    width: 10vw;
}

.choice-button:hover {
    background-color: rgba(245, 245, 245, 0.7);
}

input[type="radio"] {
    display: none; /* Hide the default radio button */
}

.custom-radio {
    width: 20px; /* Size of the custom radio button */
    height: 20px; /* Size of the custom radio button */
    border: 2px solid #ccc; /* Border color */
    border-radius: 50%; /* Make it circular */
    position: relative; /* Positioning for the inner circle */
    margin-right: 10px; /* Space between radio button and label */
    cursor: pointer; /* Change cursor to pointer */
}

input[type="radio"]:checked + .custom-radio {
    border-color: rgb(94, 192, 238); 
}

input[type="radio"]:checked + .custom-radio::after {
    content: ''; /* Create a pseudo-element */
    width: 12px; /* Size of the inner circle */
    height: 12px; /* Size of the inner circle */
    background-color: rgb(94, 192, 238);
    border-radius: 50%; /* Make it circular */
    position: absolute; /* Positioning */
    top: 50%; /* Center vertically */
    left: 50%; /* Center horizontally */
    transform: translate(-50%, -50%); /* Center the inner circle */
}

/* Toggle Switch Styling*/
.container {
    position: absolute; /* Change to absolute positioning */
    top: 50%; /* Position from the top */
    left: 7%; /* Position from the left */
    transform: translate(-50%, -50%); /* Center the container */
    display: flex;
    flex-direction: column; /* Stack elements vertically */
    align-items: center; /* Center elements horizontally */
    text-align: center; /* Center text */
}

/* Toggle Switch Styling*/
.door-container {
    position: absolute; /* Change to relative positioning */
    left: 7%;
    top: 72%;
    transform: translate(-50%, 0); /* Center the container */
    display: flex;
    flex-direction: column; /* Stack elements vertically */
    align-items: center; /* Center elements horizontally */
    text-align: center; /* Center text */
}

.switch_title {
    margin-bottom: 5px; /* Space between title and switches */
    margin-top: 10px;
    font-size: 16px; /* Adjust font size as needed */
}

.single-select-switch {
    display: flex;
    justify-content: center; /* Center the switches horizontally */
    margin-bottom: 5px;
}

.switch {
    position: relative;
    display: inline-block;
    width: 150px;
    height: 34px; /* Height of the slider */
}

.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
    border-radius: 34px;
}

.slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
}

input:checked + .slider {
    background-color: rgb(94, 192, 238);
}

input:checked + .slider:before {
    transform: translateX(116px);
}

/* Change label text based on toggle state */
.switch input:checked + .slider + .label {
    content: "On"; /* Change label to "On" when checked */
}

/* Style for the label */
.label {
    position: absolute;
    top: 50%; /* Center the label vertically */
    left: 50%; /* Center the label horizontally */
    transform: translate(-50%, -50%); /* Adjust for the label's own size */
    color: black; /* Change text color */
    z-index: 1; /* Ensure the label is above the slider */
}

/* Style for the inactive options */
.switch input:not(:checked) + .slider {
    background-color: #ccc;
}


/* Mini Map Styling */
.mini-map {
    position: absolute;
    top: 25%; /* Distance from the top */
    right: 5%; /* Distance from the left */
    display: flex; /* Use flexbox to lay out buttons */
    background-color: rgba(255, 255, 255, 0.8); /* Semi-transparent background */
    border: 1px solid #ccc; /* Border around the mini-map */
    border-radius: 8px; /* Rounded corners */
    padding: 10px; /* Padding inside the mini-map */
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2); /* Shadow effect */
    z-index: 1000; /* Ensure it stays on top */
}

.mini-map-title {
    position: absolute;
    top: 22%; /* Distance from the top */
    right: 10%; /* Distance from the right */
    margin: 0; /* Remove default margin */
    font-size: 16px; /* Font size for the title */
    padding-bottom: 5px; /* Space between title and mini-map */
    z-index: 1001; /* Ensure it stays on top of the mini-map */
}

.grid {
    display: grid;
    grid-template-columns: 177px 217px; /* Two columns: Room A and Room C */
    grid-template-rows: 313px 258px; /* First row auto height, second row fixed height for Room B */
    gap: 0; /* No gap between grid items */
}

.receive-room-1 {
    grid-column: 1 / span 2; /* Receive Room 1 spans both columns */
    grid-row: 1; 
}

.receive-room-2 {
    grid-column: 2; 
    grid-row: 2; 
}

.source-room {
    grid-column: 1;
    grid-row: 2;
}

.stacked, .non-stacked {
    display: flex; /* Use flexbox for alignment */
    flex-direction: column; /* Stack items vertically */
    align-items: center; /* Center items horizontally */
}

.stacked img, .non-stacked img {
    display: block; /* Ensure images are block elements */
    cursor: pointer; /* Pointer cursor on hover */
    transition: transform 0.3s; /* Smooth transition for hover effect */
}

.stacked input, .non-stacked input {
    opacity: 0;
    width: 0;
    height: 0;
}

.stacked img:hover, .non-stacked img:hover {
    transform: scale(1.1); /* Scale up the image on hover */
}

/* Different sizes for each image */
.img-receive-room-1 {
    width: 394px;
    height: 313px;
    cursor: pointer; /* Pointer cursor on hover */
}
.img-receive-room-2 {
    width: 217px;
    height: 258px;
    cursor: pointer; /* Pointer cursor on hover */
}
.img-source-room {
    width: 177px;
    height: 258px;
    cursor: pointer; /* Pointer cursor on hover */
}